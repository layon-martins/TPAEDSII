/* Trabalho Prático 1 - Disciplina AEDS 2 - UFV CAF
 * Integrantes:
 * Ana Carolina Fernandes - 5094
 * Bárbara Pagnocca - 5061
 * Jéssica Cristina Carvalho - 4686
 * Layon Fonseca Martins - 4220
*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h> // para usar a função tolower

void tratamentoDePalavras(char *palavra);

int main()
{
	FILE *entrada;
	char arqv[50];
	int opcao, N;
	Aptd_Pat Arvore = NULL;

	while (TRUE)
		printf("\nSelecione o que deseja fazer:");
		printf("\n1 - Inserir textos");
		printf("\n2 - Realizar busca");
		printf("\n3 - Imprimir palavras em ordem alfabetica");
		printf("\n4 - Sair do menu");

		scanf("%d",&opcao);

		switch (ocpao)
		{
		case (1):
			printf("\n Nome do arquivo:");
			scanf("%s",arqv);
			entrada = fopen(arqv, "r");
            if(entrada == NULL){
		          printf("Não foi possível abrir o arquivo\n");
		         return 0;
	        }
            fscanf(entrada, "%d\n", &N);

            for (int i = 0; i< N; i++){   
                fscanf(entrada, "%s", nomeArq); 
                arquivo = fopen(nomeArq, "r");
                if(arquivo == NULL){
	        	      printf("Não foi possível abrir o arquivo\n");
	        	      break;
	              }
             while (!feof(arquivo)){
               fscanf(arquivo, "%s", palavra); 
               tratamentoDePalavras(palavra);
                printf("%s\n", palavra);
              }
               fclose(arquivo);
            }
            
            
            // Chamar a função pra gerar a arvore e ir inserindo por aqui,
            // Duvida: local correto de fazer isso
            
            fclose(entrada);
			printf("\nArvore construida com sucesso");
			break;
					
		case (2):
			//Chamar função de busca aqui
			
		case (3):
			ImprimeEmOrdem(Arvore);
			break;

		case (4):
			return 0;
		
		default:
			printf("\nOpção invalida.\n");
			break;
		}
	}

	fclose(entrada);

    return 0;
}


void tratamentoDePalavras(char *palavra){
  int i;  
  int ascii;  
  for (i = 0; i < strlen(palavra); i++){
    // tolower funciona em caractere
    palavra[i] = tolower(palavra[i]);

    //transforma a palavra para um valor na tabela ascii
    ascii = (int)palavra[i];
    if (ascii < 97 || ascii > 122){
      //caso o caracter não esteja entre a e z minúsculos, ele coloca como fim de string
      palavra[i] = '\0';
    }
  }
}
